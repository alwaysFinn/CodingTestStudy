# 이진 변환 반복하기
0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.

x의 모든 0을 제거합니다.
x의 길이를 c라고 하면, x를 "c를 2진법으로 표현한 문자열"로 바꿉니다.
예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.

0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 "1"이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 
이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.
---------------------------------------------------------------------------------------------------------
class Solution {
    public int[] solution(String s) {
        
        int[] answer = new int [2];
        
        int x = 0;
        String s1 = "";
        String binary = "";
        
        while(true){
            
            int aCount = s.length() - s.replace("0", "").length(); // 제거한 0 수 카운트
            answer[1] += aCount; // 정답에 ++
            
            s1 = s.replace("0", ""); // 실질적으로 0 제거
            if(s1.contains("0")){
                
            }
            x = s1.length(); // 0을 제거한 후 길이
            
            binary = Integer.toBinaryString(x);
            answer[0] += 1;
            
            if()
            
        }
        
        return answer;
    }
}


미완성 다시 시도할 것

https://school.programmers.co.kr/learn/courses/30/lessons/70129
